CREATE TABLE default_image (id BIGINT AUTO_INCREMENT, name VARCHAR(255), title VARCHAR(255), image VARCHAR(255) NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE floor (id BIGINT AUTO_INCREMENT, restaurant_id BIGINT NOT NULL, name VARCHAR(255), width SMALLINT UNSIGNED NOT NULL, height SMALLINT UNSIGNED NOT NULL, INDEX restaurant_id_idx (restaurant_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE floor_place (id BIGINT AUTO_INCREMENT, restaurant_id BIGINT NOT NULL, floor_id BIGINT NOT NULL, width SMALLINT UNSIGNED NOT NULL, height SMALLINT UNSIGNED NOT NULL, posx SMALLINT UNSIGNED NOT NULL, posy SMALLINT UNSIGNED NOT NULL, number VARCHAR(32), min_persons SMALLINT UNSIGNED DEFAULT 1, max_persons SMALLINT UNSIGNED DEFAULT 1, INDEX floor_id_idx (floor_id), INDEX restaurant_id_idx (restaurant_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE floor_spacer (id BIGINT AUTO_INCREMENT, restaurant_id BIGINT NOT NULL, floor_id BIGINT NOT NULL, width SMALLINT UNSIGNED NOT NULL, height SMALLINT UNSIGNED NOT NULL, posx SMALLINT UNSIGNED NOT NULL, posy SMALLINT UNSIGNED NOT NULL, INDEX floor_id_idx (floor_id), INDEX restaurant_id_idx (restaurant_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE restaurant (id BIGINT AUTO_INCREMENT, admin_id BIGINT, name VARCHAR(255) NOT NULL, slug VARCHAR(255), UNIQUE INDEX restaurant_sluggable_idx (slug), INDEX admin_id_idx (admin_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE restaurant_config (id BIGINT AUTO_INCREMENT, restaurant_id BIGINT NOT NULL, keyname VARCHAR(32) NOT NULL, section SMALLINT UNSIGNED DEFAULT 1, datatype VARCHAR(32) DEFAULT 'string', label VARCHAR(255), value VARCHAR(255), INDEX restaurant_id_idx (restaurant_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE text_block_translation (id BIGINT, text TEXT, lang CHAR(2), PRIMARY KEY(id, lang)) ENGINE = INNODB;
CREATE TABLE text_block (id BIGINT AUTO_INCREMENT, name VARCHAR(255) NOT NULL, title VARCHAR(255), application VARCHAR(32), module VARCHAR(32), special_mark VARCHAR(32), is_visible_for_admin TINYINT(1) DEFAULT '0', INDEX section_index_idx (application, module), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_forgot_password (id BIGINT AUTO_INCREMENT, user_id BIGINT NOT NULL, unique_key VARCHAR(255), expires_at DATETIME NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_group (id BIGINT AUTO_INCREMENT, name VARCHAR(255) UNIQUE, description TEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_group_permission (group_id BIGINT, permission_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(group_id, permission_id)) ENGINE = INNODB;
CREATE TABLE sf_guard_permission (id BIGINT AUTO_INCREMENT, name VARCHAR(255) UNIQUE, description TEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_remember_key (id BIGINT AUTO_INCREMENT, user_id BIGINT, remember_key VARCHAR(32), ip_address VARCHAR(50), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_user (id BIGINT AUTO_INCREMENT, first_name VARCHAR(255), last_name VARCHAR(255), email_address VARCHAR(255) NOT NULL UNIQUE, username VARCHAR(128) NOT NULL UNIQUE, algorithm VARCHAR(128) DEFAULT 'sha1' NOT NULL, salt VARCHAR(128), password VARCHAR(128), is_active TINYINT(1) DEFAULT '1', is_super_admin TINYINT(1) DEFAULT '0', last_login DATETIME, lang VARCHAR(255) DEFAULT 'en', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX is_active_idx_idx (is_active), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_user_group (user_id BIGINT, group_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(user_id, group_id)) ENGINE = INNODB;
CREATE TABLE sf_guard_user_permission (user_id BIGINT, permission_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(user_id, permission_id)) ENGINE = INNODB;
ALTER TABLE floor ADD CONSTRAINT floor_restaurant_id_restaurant_id FOREIGN KEY (restaurant_id) REFERENCES restaurant(id) ON DELETE CASCADE;
ALTER TABLE floor_place ADD CONSTRAINT floor_place_restaurant_id_restaurant_id FOREIGN KEY (restaurant_id) REFERENCES restaurant(id) ON DELETE CASCADE;
ALTER TABLE floor_place ADD CONSTRAINT floor_place_floor_id_floor_id FOREIGN KEY (floor_id) REFERENCES floor(id) ON DELETE CASCADE;
ALTER TABLE floor_spacer ADD CONSTRAINT floor_spacer_restaurant_id_restaurant_id FOREIGN KEY (restaurant_id) REFERENCES restaurant(id) ON DELETE CASCADE;
ALTER TABLE floor_spacer ADD CONSTRAINT floor_spacer_floor_id_floor_id FOREIGN KEY (floor_id) REFERENCES floor(id) ON DELETE CASCADE;
ALTER TABLE restaurant ADD CONSTRAINT restaurant_admin_id_sf_guard_user_id FOREIGN KEY (admin_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE restaurant_config ADD CONSTRAINT restaurant_config_restaurant_id_restaurant_id FOREIGN KEY (restaurant_id) REFERENCES restaurant(id) ON DELETE CASCADE;
ALTER TABLE text_block_translation ADD CONSTRAINT text_block_translation_id_text_block_id FOREIGN KEY (id) REFERENCES text_block(id) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE sf_guard_forgot_password ADD CONSTRAINT sf_guard_forgot_password_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_group_permission ADD CONSTRAINT sf_guard_group_permission_permission_id_sf_guard_permission_id FOREIGN KEY (permission_id) REFERENCES sf_guard_permission(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_group_permission ADD CONSTRAINT sf_guard_group_permission_group_id_sf_guard_group_id FOREIGN KEY (group_id) REFERENCES sf_guard_group(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_remember_key ADD CONSTRAINT sf_guard_remember_key_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_group ADD CONSTRAINT sf_guard_user_group_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_group ADD CONSTRAINT sf_guard_user_group_group_id_sf_guard_group_id FOREIGN KEY (group_id) REFERENCES sf_guard_group(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_permission ADD CONSTRAINT sf_guard_user_permission_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_permission ADD CONSTRAINT sf_guard_user_permission_permission_id_sf_guard_permission_id FOREIGN KEY (permission_id) REFERENCES sf_guard_permission(id) ON DELETE CASCADE;
